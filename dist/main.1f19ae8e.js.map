{"version":3,"sources":["main.js"],"names":["console","log","div_1","dom","find","style","divList","each","n","div","create","td","after","test","div3","wrap","attr","title","text","Dad","html","dad","border","color","styleBorder","class","add","remove","has","addFn","newDiv","on","off","toggle","testDiv","test2","parent","children","s2","siblings","next","previous","t","index"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["// 任务37\r\nconsole.log(\"任务 37 测试代码 开始\")\r\nconst div_1 = dom.find(\"#test_1 > .red\")[0];\r\nconsole.log(`div_1: ${div_1}`); // 获取对应的元素\r\ndom.style(div_1, \"color\", \"red\"); // 设置 div.style.color\r\n\r\nconst divList = dom.find(\".red\")\r\n\r\n// 获取多个 div.red 元素\r\ndom.each(divList, n => console.log(n));\r\nconsole.log(\"任务 37 测试代码 结束\")\r\n\r\n/* 对比 document.createElement(\"div\") 简化代码\r\n ** const div = dom.create(\"div\")\r\n */\r\n/* 直接写出 HTML 结构 */\r\nconst div = dom.create(\"<div><span id='newDiv'>newDiv</span></div>\");\r\nconst td = dom.create(\"<tr><td>TD</td></tr>\");\r\nconsole.log(div);\r\nconsole.log(td);\r\n\r\n/* after */\r\ndom.after(test, div);\r\nconst div3 = dom.create('<div id=\"wrapper\">DIV3</div>'); // 父节点\r\ndom.wrap(test, div3);\r\n/* empty test */\r\n// const nodes = dom.empty(window.empty);\r\n// console.log(nodes);\r\n\r\n/* 改 */\r\n/* 用于读写属性  attr(node, attributeName, value) */\r\ndom.attr(test, \"title\", \"Hi, Eric\");\r\nconst title = dom.attr(test, \"title\");\r\nconsole.log(`title: ${title}`);\r\n/* 用于读写文本内容 */\r\ndom.text(test, \"Hello,this is a new text\");\r\n\r\n/* 用于读写HTML内容 */\r\nconst Dad = dom.html(dad);\r\nconsole.log(`Dad: ${Dad}`);\r\n\r\n/* 用于修改style */\r\ndom.style(test, {\r\n    border: \"1px solid cyan\",\r\n    color: \"red\"\r\n});\r\nconsole.log(dom.style(test, \"border\"));\r\n/* 重载 修改 style */\r\ndom.style(test, \"border\", \"5px solid olive\");\r\n/* 重载 读取 style */\r\nconst styleBorder = dom.style(test, \"border\");\r\nconsole.log(styleBorder);\r\n/* 用于添加class */\r\ndom.class.add(test, \"bgColor\");\r\ndom.class.add(test, \"ftSize\");\r\ndom.class.remove(test, \"ftSize\");\r\nconsole.log(dom.class.has(test, \"bgColor\"));\r\nconsole.log(dom.class.has(test, \"ftSize\"));\r\n/* 用于添加事件监听 */\r\nfunction addFn() {\r\n    console.log('指到这里')\r\n    console.log(`点击 ${newDiv} 取消事件`)\r\n    console.log(newDiv)\r\n}\r\n\r\n// test.addEventListener('click') // TL,DR\r\ndom.on(test, \"mouseenter\", addFn);\r\n/* 用于删除事件监听 */\r\n// test.removeEventListener(eventName, fn) // TL,DR\r\ndom.off(test, \"click\", addFn);\r\ndom.toggle(test, \"click\", addFn);\r\n\r\n/* 查 */\r\nconsole.log(`---------`)\r\nconst testDiv = dom.find('#test')[0]\r\nconsole.log(`testDiv:`)\r\nconsole.log(testDiv)\r\n\r\nconst test2 = dom.find('#test2')[0]\r\nconsole.log(`test2>.red`)\r\nconsole.log(dom.find('.red', test2)[0])\r\nconsole.log(`---------`)\r\n\r\nconsole.log(`=== 找父、兄节点 ===`)\r\nconsole.log('parent')\r\nconsole.log(dom.parent(test))\r\nconsole.log('children')\r\nconsole.log(dom.children(test2))\r\nconsole.log('siblings')\r\nconst s2 = dom.find('#s2')[0]\r\nconsole.log(dom.siblings(s2))\r\nconsole.log('next')\r\nconsole.log(dom.next(s2))\r\nconsole.log('previous')\r\nconsole.log(dom.previous(s2))\r\nconsole.log(`=== ===`)\r\n    /* 遍历 */\r\nconst t = dom.find('#travel')[0]\r\ndom.each(dom.children(t), (n) => dom.style(n, 'color', 'red'))\r\n    /* 下标 */\r\nconsole.log(dom.index(s2))"]}